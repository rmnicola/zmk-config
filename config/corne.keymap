/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        BACK_BASE {
            bindings = <&to 0>;
            key-positions = <36 41>;
        };
    };

    behaviors {
        SHIFT_GUI: SHIFT_GUI {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_GUI";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&sk LEFT_SHIFT>, <&sk LEFT_GUI>;
        };

        SHIFT_RET: SHIFT_RET {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_RET";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&sk LSHFT>, <&kp RET>;
        };

        DOT_BANG: DOT_BANG {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_BANG";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp PERIOD>, <&kp EXCL>;
        };
    };

    macros {
        A_Tilde: A_Tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp A>;
            label = "A_Tilde";
        };

        O_Tilde: O_Tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp O>;
            label = "O_TILDE";
        };

        A_Caret: A_Caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp A>;
            label = "A_CARET";
        };

        E_Caret: E_Caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp E>;
            label = "E_CARET";
        };

        O_Caret: O_Caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp O>;
            label = "O_CARET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB       &kp Q  &kp W  &kp E  &kp R            &kp T         &kp Y                   &kp U                &kp I      &kp O      &kp P     &kp BACKSPACE
&lt 1 ESCAPE  &kp A  &kp S  &kp D  &kp F            &kp G         &kp H                   &kp J                &kp K      &kp L      &kp SEMI  &kp APOS
&kp LCTRL     &kp Z  &kp X  &kp C  &kp V            &kp B         &kp N                   &kp M                &kp COMMA  &DOT_BANG  &kp FSLH  &kp RET
                            &mo 2  &mt LCTRL SPACE  &SHIFT_GUI    &mt RIGHT_SHIFT RETURN  &mt RIGHT_ALT SPACE  &mo 1
            >;
        };

        Npad {
            bindings = <
&trans  &kp EXCLAMATION  &kp APOS   &kp BACKSLASH         &kp SLASH              &kp MINUS    &kp N7  &kp N8  &kp N9  &kp MINUS  &trans  &trans
&trans  &kp AMPERSAND    &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL    &kp N4  &kp N5  &kp N6  &kp PLUS   &trans  &trans
&trans  &kp DOLLAR       &kp CARET  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp FSLH     &kp N1  &kp N2  &kp N3  &kp N0     &trans  &trans
                                    &trans                &trans                 &trans       &trans  &trans  &trans
            >;
        };

        F_keys {
            bindings = <
&trans  &kp F1  &kp F2          &kp F3         &kp F4        &kp F5          &kp F6          &kp F7        &kp F8          &kp F9           &kp F10  &trans
&trans  &none   &bt BT_CLR      &kp PAGE_DOWN  &kp PAGE_UP   &none           &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp F11  &trans
&trans  &none   &bt BT_CLR_ALL  &none          &out OUT_BLE  &out OUT_USB    &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3     &kp F12  &trans
                                &trans         &trans        &trans          &trans          &trans        &trans
            >;
        };
    };
};
