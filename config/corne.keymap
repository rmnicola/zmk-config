/*
 * copyright (c) 2020 the zmk contributors
 *
 * spdx-license-identifier: mit
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc_num {
            bindings = <&lt 2 escape>;
            key-positions = <19 20>;
            layers = <0>;
        };

        ret_num {
            bindings = <&lt 2 ret>;
            key-positions = <16 15>;
            layers = <0>;
        };

        fg {
            bindings = <&mo 0>;
            key-positions = <4 5>;
            layers = <0>;
        };

        delword {
            bindings = <&kp lc(rc(backspace))>;
            key-positions = <40 41>;
        };
    };

    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        tilde_layer: tilde_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "tilde_layer";
            bindings = <&mo>, <&m_quote>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
        };
    };

    macros {
        m_quote: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp apos &kp space>;
            label = "m_quote";
        };

        m_caret: m_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp caret &kp space>;
            label = "m_caret";
        };

        m_grave: m_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp grave &kp space>;
            label = "m_grave";
        };

        atilde: atilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp tilde &kp a>;
            label = "atilde";
        };

        acaret: acaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp caret &kp a>;
            label = "acaret";
        };

        ecaret: ecaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp caret &kp e>;
            label = "ecaret";
        };

        ocaret: ocaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp caret &kp o>;
            label = "ocaret";
        };

        otilde: otilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp tilde &kp o>;
            label = "otilde";
        };
        
        m_tilde: m_tilde {
        compatible = "zmk,behavior-macro";
      
         #binding-cells = <0>;
         bindings = <&kp tilde &kp space>;
         label = "m_tilde";
         };

         m_dquote: m_dquote {
         compatible = "zmk,behavior-macro";
      
         #binding-cells = <0>;
         bindings = <&kp double_quotes &kp space>;
         label = "m_dquote";
         };
    };

keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp escape  &kp q                 &kp w                &kp e                    &kp r                  &kp t        &kp y         &kp u                  &kp i                    &kp o                &kp p                         &kp backspace
&kp tab     &homerow left_meta a  &homerow left_alt s  &homerow left_control d  &homerow left_shift f  &kp g        &kp h         &homerow left_shift j  &homerow left_control k  &homerow left_alt l  &homerow left_meta semicolon  &m_quote
&kp lctrl   &kp z                 &kp x                &kp c                    &kp v                  &kp b        &kp n         &kp m                  &kp comma                &kp dot              &kp fslh                      &kp ret
                                                       &lt 4 escape             &lt 3 space            &lt 1 tab    &lt 2 return  &lt 3 backspace        &lt 0 delete
>;
        };

        num {
            bindings = <
&trans  &kp equal           &kp n7                   &kp n8                  &kp n9                        &kp astrk    &kp asterisk  &kp n7   &kp n8    &kp n9  &kp k_copy   &trans
&trans  &homerow lc(x) dot  &homerow lc(v) number_4  &homerow lc(n5) lc(n5)  &homerow left_shift number_6  &kp minus    &kp minus     &kp n4   &kp n5    &kp n6  &trans       &trans
&trans  &kp n0              &kp number_1             &kp n2                  &kp n3                        &kp equal    &kp equal     &kp n1   &kp n2    &kp n3  &kp k_paste  &trans
                                                     &trans                  &trans                        &trans       &kp n0        &kp dot  &kp bslh
>;
        };
        num_alt {
         bindings = <
&trans  &kp exclamation              &kp at                      &kp hash                        &kp dollar                    &kp percent    &m_caret       &kp amps                &kp astrk                 &kp left_parenthesis  &kp right_parenthesis  &trans
&trans  &homerow left_meta number_1  &homerow left_alt number_2  &homerow left_control number_3  &homerow left_shift number_4  &kp n5         &kp n6         &homerow left_shift n7  &homerow left_control n8  &homerow left_alt n9  &homerow left_meta n0  &trans
&trans  &m_tilde                     &m_grave                    &kp left_bracket                &kp right_bracket             &kp pipe       &kp backslash  &kp left_brace          &kp right_brace           &m_quote              &m_dquote              &trans
                                                                 &kp plus                        &kp equal                     &kp minus      &trans         &trans                  &trans
>;
        };
        accents {
         bindings = <
&kp grave  &acaret                   &ecaret                  &trans                       &ocaret                    &trans       &trans     &ocaret                    &trans                       &ecaret                  &acaret                   &trans
&trans     &homerow left_meta ra(a)  &homerow left_alt ra(e)  &homerow left_control ra(i)  &homerow left_shift ra(o)  &kp ra(u)    &kp ra(u)  &homerow left_shift ra(o)  &homerow left_control ra(i)  &homerow left_alt ra(e)  &homerow left_meta ra(a)  &trans
&trans     &atilde                   &trans                   &kp ra(c)                    &otilde                    &trans       &trans     &otilde                    &kp ra(c)                    &trans                   &atilde                   &trans
                                                              &trans                       &trans                     &trans       &trans     &trans                     &trans
>;
        };
        nav {
         bindings = <
&trans  &kp la(f4)     &kp f11        &kp lc(w)        &kp lc(t)    &kp k_paste    &trans  &trans          &trans          &trans        &trans           &trans
&trans  &kp left_meta  &kp lg(ls(s))  &kp lc(ls(tab))  &kp lc(tab)  &kp k_copy     &trans  &kp left_arrow  &kp down_arrow  &kp up_arrow  &kp right_arrow  &trans
&trans  &kp lc(la(t))  &kp lg(e)      &kp tab          &kp escape   &kp lc(x)      &trans  &kp home        &kp page_down   &kp page_up   &kp end          &trans
                                      &trans           &trans       &trans         &trans  &trans          &trans
>;
        };
    };
};
