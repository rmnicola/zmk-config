/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc_num {
            bindings = <&lt 2 ESCAPE>;
            key-positions = <19 20>;
        };

        ret_num {
            bindings = <&lt 2 RET>;
            key-positions = <16 15>;
        };

        acc1 {
            bindings = <&lt 3 RA(COMMA)>;
            key-positions = <4 3>;
        };

        acc2 {
            bindings = <&lt 3 RA(COMMA)>;
            key-positions = <7 8>;
        };

        delword {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <41 38>;
        };

        shiftword {
            bindings = <&caps_word>;
            key-positions = <38 39>;
        };

        l6 {
            bindings = <&mo 6>;
            key-positions = <36 41>;
        };
    };

    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };

        a_crase: a_crase {
            compatible = "zmk,behavior-mod-morph";
            label = "A_CRASE";
            bindings = <&m_crase>, <&m_crase_upper>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        a_accent: a_accent {
            compatible = "zmk,behavior-tap-dance";
            label = "A_ACCENT";
            #binding-cells = <0>;
            bindings = <&kp RA(A)>, <&a_crase>;
        };
    };

    macros {
        m_quote: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "m_quote";
        };

        m_dquotes: m_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp SPACE>;
            label = "M_DQUOTES";
        };

        m_grave: m_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
            label = "M_GRAVE";
        };

        m_tilde: m_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp SPACE>;
            label = "M_TILDE";
        };

        m_atilde: m_atilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp A>;
            label = "m_atilde";
        };

        m_acaret: m_acaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp A>;
            label = "m_acaret";
        };

        m_ecaret: m_ecaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp E>;
            label = "m_ecaret";
        };

        m_otilde: m_otilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp O>;
            label = "m_otilde";
        };

        m_ocaret: m_ocaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp O>;
            label = "m_ocaret";
        };

        m_crase: m_crase {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp A>;
            label = "M_CRASE";
        };

        m_crase_upper: m_crase_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LS(A)>;
            label = "M_CRASE_UPPER";
        };

        m_caret: m_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp SPACE>;
            label = "M_CARET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE  &kp Q                 &kp W                &kp E                    &kp R                  &kp T              &kp Y            &kp U             &kp I                    &kp O                &kp P                         &kp MINUS
&kp TAB     &homerow LEFT_META A  &homerow LEFT_ALT S  &homerow LEFT_CONTROL D  &homerow LEFT_SHIFT F  &kp G              &kp H            &homerow LSHFT J  &homerow LEFT_CONTROL K  &homerow LEFT_ALT L  &homerow LEFT_META SEMICOLON  &m_quote
&kp LCTRL   &kp Z                 &kp X                &kp C                    &kp V                  &kp B              &kp N            &kp M             &kp COMMA                &kp DOT              &kp FSLH                      &kp RET
                                                       &lt 4 ESCAPE             &lt 3 SPACE            &lt 1 BACKSPACE    &lt 2 BACKSPACE  &lt 3 SPACE       &lt 5 DELETE
            >;
        };

        NUM {
            bindings = <
&trans  &kp EQUAL              &kp N7                      &kp N8                    &kp N9                        &kp ASTRK    &kp ASTERISK  &kp N7                   &kp N8                          &kp N9                      &kp K_COPY              &trans
&trans  &homerow LEFT_META N0  &homerow LEFT_ALT NUMBER_4  &homerow LEFT_CONTROL N5  &homerow LEFT_SHIFT NUMBER_6  &kp MINUS    &kp MINUS     &homerow LSHFT NUMBER_1  &homerow LEFT_CONTROL NUMBER_2  &homerow LEFT_ALT NUMBER_3  &homerow LEFT_META DOT  &trans
&trans  &kp N0                 &kp N1                      &kp N2                    &kp N3                        &kp EQUAL    &kp EQUAL     &kp N1                   &kp N2                          &kp N3                      &kp K_PASTE             &trans
                                                           &lt 0 ESCAPE              &lt 0 SPACE                   &lt 0 TAB    &kp N0        &kp DOT                  &kp BACKSLASH
            >;
        };

        SYM {
            bindings = <
&trans  &kp N1                   &kp N2                &kp N3                      &kp N4                      &kp N5         &kp N6    &kp N7               &kp N8                       &kp N9                              &kp N0                                &kp BACKSPACE
&trans  &homerow LEFT_META EXCL  &homerow LEFT_ALT AT  &homerow LEFT_CONTROL HASH  &homerow LEFT_SHIFT DOLLAR  &kp PERCENT    &m_caret  &homerow LSHFT AMPS  &homerow LEFT_CONTROL ASTRK  &homerow LEFT_ALT LEFT_PARENTHESIS  &homerow LEFT_META RIGHT_PARENTHESIS  &trans
&trans  &m_tilde                 &m_grave              &kp LBKT                    &kp RBKT                    &kp PIPE       &kp BSLH  &kp LEFT_BRACE       &kp RIGHT_BRACE              &m_quote                            &m_dquotes                            &trans
                                                       &kp PLUS                    &kp MINUS                   &kp EQUAL      &trans    &trans               &trans
            >;
        };

        ACCENTS {
            bindings = <
&trans  &m_acaret  &trans                   &m_ecaret                    &m_ocaret                  &trans       &m_ecaret  &trans                &trans                       &m_ocaret                &m_acaret  &trans
&trans  &a_accent  &homerow LEFT_ALT RA(I)  &homerow LEFT_CONTROL RA(E)  &homerow LEFT_SHIFT RA(O)  &kp RA(U)    &kp RA(E)  &homerow LSHFT RA(U)  &homerow LEFT_CONTROL RA(I)  &homerow LEFT_ALT RA(O)  &a_accent  &trans
&trans  &m_atilde  &trans                   &kp RA(COMMA)                &m_otilde                  &trans       &trans     &trans                &kp RA(COMMA)                &m_otilde                &m_atilde  &trans
                                            &trans                       &trans                     &trans       &trans     &trans                &trans
            >;
        };

        NAV {
            bindings = <
&trans         &kp LA(F4)     &kp F11        &kp LC(W)        &kp LC(T)    &kp UP_ARROW    &trans  &trans          &trans          &trans        &trans           &trans
&trans         &kp LEFT_META  &kp LS(LG(S))  &kp LC(LS(TAB))  &kp LC(TAB)  &kp F5          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp LA(LC(T))  &kp BACKSPACE  &kp LG(E)      &kp K_COPY       &kp K_PASTE  &kp DOWN        &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                             &trans           &trans       &trans          &trans  &trans          &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F10  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F12  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &trans  &trans  &trans             &trans  &trans     &trans
            >;
        };

        BT {
            bindings = <
&bt BT_CLR  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none       &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &out OUT_TOG    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                        &none         &none         &none           &none  &none  &none
            >;
        };
    };
};
