/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc_num {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        ret_num {
            bindings = <&kp RET>;
            key-positions = <16 15>;
        };

        delword {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <41 38>;
        };

        shiftword {
            bindings = <&kp CAPSLOCK>;
            key-positions = <19 16>;
        };

        shift_left {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 4>;
        };

        shift_right {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <19 7>;
        };

        ctrl_left {
            bindings = <&kp RCTRL>;
            key-positions = <3 15>;
        };

        ctrl_right {
            bindings = <&kp RCTRL>;
            key-positions = <8 20>;
        };

        alt_left {
            bindings = <&kp LEFT_ALT>;
            key-positions = <14 2>;
        };

        alt_right {
            bindings = <&kp LEFT_ALT>;
            key-positions = <9 21>;
        };

        super_left {
            bindings = <&kp LEFT_GUI>;
            key-positions = <1 13>;
        };

        super_right {
            bindings = <&kp LEFT_GUI>;
            key-positions = <10 22>;
        };
    };

    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
        };

        a_crase: a_crase {
            compatible = "zmk,behavior-mod-morph";
            label = "A_CRASE";
            bindings = <&m_crase>, <&m_crase_upper>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        a_accent: a_accent {
            compatible = "zmk,behavior-tap-dance";
            label = "A_ACCENT";
            #binding-cells = <0>;
            bindings = <&kp RA(A)>, <&a_crase>;
        };

        homerow_shift: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <120>;
        };
    };

    macros {
        m_quote: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "m_quote";
        };

        m_dquotes: m_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp SPACE>;
            label = "M_DQUOTES";
        };

        m_grave: m_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
            label = "M_GRAVE";
        };

        m_tilde: m_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp SPACE>;
            label = "M_TILDE";
        };

        m_atilde: m_atilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp A>;
            label = "m_atilde";
        };

        m_acaret: m_acaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp A>;
            label = "m_acaret";
        };

        m_ecaret: m_ecaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp E>;
            label = "m_ecaret";
        };

        m_otilde: m_otilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp O>;
            label = "m_otilde";
        };

        m_ocaret: m_ocaret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp O>;
            label = "m_ocaret";
        };

        m_crase: m_crase {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp A>;
            label = "M_CRASE";
        };

        m_crase_upper: m_crase_upper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp LS(A)>;
            label = "M_CRASE_UPPER";
        };

        m_caret: m_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp SPACE>;
            label = "M_CARET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&lt 5 TAB     &kp Q  &kp W  &kp E      &kp R        &kp T                       &kp Y               &kp U        &kp I       &kp O    &kp P          &kp MINUS
&lt 6 ESCAPE  &kp A  &kp S  &kp D      &kp F        &kp G                       &kp H               &kp J        &kp K       &kp L    &kp SEMICOLON  &m_quote
&tog 1        &kp Z  &kp X  &kp C      &kp V        &kp B                       &kp N               &kp M        &kp COMMA   &kp DOT  &kp FSLH       &kp RET
                            &lt 4 TAB  &lt 2 SPACE  &mt LEFT_SHIFT BACKSPACE    &mt LEFT_SHIFT RET  &lt 3 SPACE  &kp DELETE
            >;
        };

        NUM {
            bindings = <
&trans  &kp BACKSPACE  &kp N7        &kp N8  &kp N9        &kp DOT      &kp DOT    &kp N7  &kp N8  &kp N9  &kp BSPC  &kp MINUS
&trans  &kp N0         &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp COMMA    &kp COMMA  &kp N4  &kp N5  &kp N6  &kp N0    &kp EQUAL
&trans  &kp N0         &kp N1        &kp N2  &kp N3        &kp RET      &kp ENTER  &kp N1  &kp N2  &kp N3  &kp N0    &kp PLUS
                                     &trans  &trans        &trans       &trans     &trans  &trans
            >;
        };

        SYM {
            bindings = <
&m_tilde  &kp N1           &kp N2            &kp N3          &kp N4                &kp N5           &kp N6     &kp N7                 &kp N8           &kp N9             &kp N0  &trans
&m_grave  &kp EXCLAMATION  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp PLUS         &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans  &trans
&m_caret  &kp AT           &kp PERCENT       &kp HASH        &kp ASTERISK          &kp BACKSLASH    &kp PIPE   &kp AMPERSAND          &trans           &trans             &trans  &trans
                                             &trans          &trans                &trans           &trans     &trans                 &trans
            >;
        };

        ACCENTS {
            bindings = <
&trans  &m_acaret  &m_ocaret  &m_ecaret      &trans     &trans       &trans     &trans     &m_ecaret      &m_ocaret  &m_acaret  &trans
&trans  &a_accent  &kp RA(O)  &kp RA(E)      &kp RA(U)  &kp RA(I)    &kp RA(I)  &kp RA(U)  &kp RA(E)      &kp RA(O)  &a_accent  &trans
&trans  &m_atilde  &m_otilde  &kp RA(COMMA)  &trans     &trans       &trans     &trans     &kp RA(COMMA)  &m_otilde  &m_atilde  &trans
                              &trans         &trans     &trans       &trans     &trans     &trans
            >;
        };

        NAV {
            bindings = <
&none  &none  &none      &none      &kp F11        &kp LG(LS(L))    &trans  &trans          &trans          &trans        &trans           &trans
&none  &none  &none      &none      &kp LG(LS(S))  &none            &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&none  &none  &kp LC(X)  &kp LC(C)  &kp LC(V)      &none            &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                         &trans     &trans         &trans           &trans  &trans          &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp SCROLLLOCK     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &trans   &trans   &trans             &trans  &trans     &trans
            >;
        };

        BT {
            bindings = <
&none  &none         &bt BT_CLR_ALL  &none         &bt BT_CLR    &out OUT_BLE    &none  &none  &none  &none  &none  &none
&none  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &out OUT_USB    &none  &none  &none  &none  &none  &none
&none  &none         &none           &none         &none         &none           &none  &none  &none  &none  &none  &none
                                     &none         &none         &none           &none  &none  &none
            >;
        };
    };
};
